<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/security/oauth2
       http://www.springframework.org/schema/security/spring-security-oauth2.xsd">
    <context:component-scan base-package="bo.net.tigo"/>
    <mvc:annotation-driven />
    <mvc:default-servlet-handler />
    <context:annotation-config/>
    <!--############### PERSISTENCE ###############-->

    <!--********** DB2 Spring Data Source **********-->

    <bean id="db2DataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db2.jdbc.driverClassName}"/>
        <property name="url" value="jdbc:db2://${db2.jdbc.host}:${db2.jdbc.port}/${db2.jdbc.schema}"/>
        <property name="username" value="${db2.jdbc.username}"/>
        <property name="password" value="${db2.jdbc.password}"/>
    </bean>

    <!--********** Oracle Spring Data Source **********-->
    <bean id="oracleDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${oracle.jdbc.driverClassName}"/>
        <property name="url" value="jdbc:oracle:thin:@//${oracle.jdbc.host}:${oracle.jdbc.port}/${oracle.jdbc.service.name}"/>
        <property name="username" value="${oracle.jdbc.username}"/>
        <property name="password" value="${oracle.jdbc.password}"/>
    </bean>
    <context:property-placeholder location="classpath:database.properties"/>


    <!--********** SessionFactory **********-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="oracleDataSource"/>
        <!--<property name="packagesToScan" value="bo.net.tigo.model" />-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.SetBigStringTryClob">true</prop>
                <!--On production must be changed to validate-->
                <prop key="hibernate.hbm2ddl.auto">create</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>orm/OrderRequest.hbm.xml</value>
                <value>orm/TaskRequest.hbm.xml</value>
                <value>orm/AccessLog.hbm.xml</value>
                <value>orm/City.hbm.xml</value>
                <value>orm/Contact.hbm.xml</value>
                <value>orm/FTPParameter.hbm.xml</value>
                <value>orm/Job.hbm.xml</value>
                <value>orm/Task.hbm.xml</value>
                <value>orm/User.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!--********** TransactionManager **********-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--############### SECURITY ###############-->
    <security:http pattern="/oauth/token" create-session="stateless"
                   authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
        <security:anonymous enabled="false" />
        <security:http-basic entry-point-ref="clientAuthenticationEntryPoint" />
        <!-- include this only if you need to authenticate clients via request parameters -->
        <security:custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />
        <security:access-denied-handler ref="oauthAccessDeniedHandler" />
    </security:http>

    <security:http pattern="/protected/**" create-session="never"
                   entry-point-ref="oauthAuthenticationEntryPoint">
        <security:anonymous enabled="false" />
        <security:intercept-url pattern="/protected/**" method="GET" access="IS_AUTHENTICATED_FULLY" />
        <security:custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
        <security:access-denied-handler ref="oauthAccessDeniedHandler" />
    </security:http>

    <bean id="oauthAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
    </bean>

    <bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="springsec/client" />
        <property name="typeName" value="Basic" />
    </bean>

    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
    </bean>

    <bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="authenticationManager" />
    </bean>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="clientDetailsUserService" />
    </security:authentication-manager>

    <bean id="clientDetailsUserService"
          class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails" />
    </bean>

    <bean id="clientDetails" class="bo.net.tigo.security.AAAGuestServiceImpl">
        <property name="id" value="mysupplycompany" />
        <property name="secretKey" value="mycompanykey" />
    </bean>

    <security:authentication-manager id="userAuthenticationManager">
        <security:authentication-provider ref="customUserAuthenticationProvider" />
    </security:authentication-manager>

    <bean id="customUserAuthenticationProvider"
          class="bo.net.tigo.security.AAAUserAuthenticationProvider">
    </bean>

    <oauth:authorization-server
            client-details-service-ref="clientDetails" token-services-ref="tokenServices">
        <oauth:authorization-code />
        <oauth:implicit/>
        <oauth:refresh-token/>
        <oauth:client-credentials />
        <oauth:password authentication-manager-ref="userAuthenticationManager"/>
    </oauth:authorization-server>

    <oauth:resource-server id="resourceServerFilter"
                           resource-id="springsec" token-services-ref="tokenServices" />

    <bean id="tokenStore"
          class="org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore" />

    <bean id="tokenServices"
          class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore" />
        <property name="supportRefreshToken" value="true" />
        <property name="accessTokenValiditySeconds" value="1200"></property>
        <property name="clientDetailsService" ref="clientDetails" />
    </bean>

    <!--LDAP Authentication-->
    <!--<bean id="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">-->
    <!--<property name="url" value="ldap://73.20.0.6:389"/>-->
    <!--<property name="base" value="dc=tigo,dc=net,dc=bo"/>-->
    <!--</bean>-->
    <!--<bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">-->
    <!--<constructor-arg ref="contextSource"/>-->
    <!--<property name="ignorePartialResultException" value="true"/>-->
    <!--</bean>-->
    <bean id="myAuthenticator" class="bo.net.tigo.security.MyAuthenticator">
        <!--<constructor-arg ref="ldapTemplate"/>-->
    </bean>

    <!--<bean id="adAuthenticationProvider" class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">-->
    <!--<constructor-arg value="tigo.net.bo"/>-->
    <!--<constructor-arg value="ldap://73.20.0.6:389"/>-->
    <!--<property name="useAuthenticationRequestCredentials" value="true" />-->
    <!--<property name="convertSubErrorCodesToExceptions" value="true"/>-->
    <!--</bean>-->
    <!--<sec:authentication-manager id="myAuthenticationManager">-->
    <!--<sec:authentication-provider ref="adAuthenticationProvider" />-->
    <!--</sec:authentication-manager>-->

</beans>